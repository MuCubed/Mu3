import org.gradle.internal.os.OperatingSystem

task downloadApkTool {
    //TBD
}

task decompile(type:Exec) {
    File apkTool = new File('./apktool*.jar')
    if (!apkTool.isFile()) {
        if (OperatingSystem.current().isLinux()) {
            println 'Decompiling on Linux'
            commandLine 'java -jar apktool_' + APKToolVersion + '.jar d kik-' + KikVersion + '.apk'
        }
        if (OperatingSystem.current().isWindows()) {
            println 'Decompiling on Windows'
            commandLine "cmd","/c",'java -jar apktool_' + APKToolVersion + '.jar d kik-' + KikVersion + '.apk'
        }
        if (OperatingSystem.current().isMacOsX()) {
            println 'Decompiling on MacOS'
            commandLine 'java -jar apktool_' + APKToolVersion + '.jar d kik-' + KikVersion + '.apk'
        }
    }
}

task runProjectScripts {
    //TBD
}

task compile(type:Exec) {
    File apkTool = new File('./apktool*.jar')
    if (!apkTool.isFile()) {
        if (OperatingSystem.current().isLinux()) {
            println 'Compiling on Linux'
            commandLine 'java -jar apktool_' + APKToolVersion + '.jar b kik-messenger-' + KikVersion + ' -o ' + ProjectName + '_' + KikVersion + '.apk'
        }
        if (OperatingSystem.current().isWindows()) {
            println 'Compiling on Windows'
            commandLine "cmd","/c",'apktool_' + APKToolVersion + '.jar b kik-messenger-' + KikVersion + ' -o ' + ProjectName + '_' + KikVersion + '.apk'
        }
        if (OperatingSystem.current().isMacOsX()) {
            println 'Compiling on MacOS'
            commandLine 'java -jar apktool_' + APKToolVersion + '.jar b kik-messenger-' + KikVersion + ' -o ' + ProjectName + '_' + KikVersion + '.apk'
        }
    }
}